// Code generated by ent, DO NOT EDIT.

package misconfiguration

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/estebangarcia/cm3070-final-project/pkg/repositories/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLTE(FieldID, id))
}

// MisconfigurationID applies equality check predicate on the "misconfiguration_id" field. It's identical to MisconfigurationIDEQ.
func MisconfigurationID(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldMisconfigurationID, v))
}

// MisconfigurationURLDetails applies equality check predicate on the "misconfiguration_url_details" field. It's identical to MisconfigurationURLDetailsEQ.
func MisconfigurationURLDetails(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldMisconfigurationURLDetails, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldTitle, v))
}

// MisconfigurationIDEQ applies the EQ predicate on the "misconfiguration_id" field.
func MisconfigurationIDEQ(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldMisconfigurationID, v))
}

// MisconfigurationIDNEQ applies the NEQ predicate on the "misconfiguration_id" field.
func MisconfigurationIDNEQ(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNEQ(FieldMisconfigurationID, v))
}

// MisconfigurationIDIn applies the In predicate on the "misconfiguration_id" field.
func MisconfigurationIDIn(vs ...string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldIn(FieldMisconfigurationID, vs...))
}

// MisconfigurationIDNotIn applies the NotIn predicate on the "misconfiguration_id" field.
func MisconfigurationIDNotIn(vs ...string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNotIn(FieldMisconfigurationID, vs...))
}

// MisconfigurationIDGT applies the GT predicate on the "misconfiguration_id" field.
func MisconfigurationIDGT(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGT(FieldMisconfigurationID, v))
}

// MisconfigurationIDGTE applies the GTE predicate on the "misconfiguration_id" field.
func MisconfigurationIDGTE(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGTE(FieldMisconfigurationID, v))
}

// MisconfigurationIDLT applies the LT predicate on the "misconfiguration_id" field.
func MisconfigurationIDLT(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLT(FieldMisconfigurationID, v))
}

// MisconfigurationIDLTE applies the LTE predicate on the "misconfiguration_id" field.
func MisconfigurationIDLTE(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLTE(FieldMisconfigurationID, v))
}

// MisconfigurationIDContains applies the Contains predicate on the "misconfiguration_id" field.
func MisconfigurationIDContains(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldContains(FieldMisconfigurationID, v))
}

// MisconfigurationIDHasPrefix applies the HasPrefix predicate on the "misconfiguration_id" field.
func MisconfigurationIDHasPrefix(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldHasPrefix(FieldMisconfigurationID, v))
}

// MisconfigurationIDHasSuffix applies the HasSuffix predicate on the "misconfiguration_id" field.
func MisconfigurationIDHasSuffix(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldHasSuffix(FieldMisconfigurationID, v))
}

// MisconfigurationIDEqualFold applies the EqualFold predicate on the "misconfiguration_id" field.
func MisconfigurationIDEqualFold(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEqualFold(FieldMisconfigurationID, v))
}

// MisconfigurationIDContainsFold applies the ContainsFold predicate on the "misconfiguration_id" field.
func MisconfigurationIDContainsFold(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldContainsFold(FieldMisconfigurationID, v))
}

// MisconfigurationURLDetailsEQ applies the EQ predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsEQ(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsNEQ applies the NEQ predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsNEQ(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNEQ(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsIn applies the In predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsIn(vs ...string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldIn(FieldMisconfigurationURLDetails, vs...))
}

// MisconfigurationURLDetailsNotIn applies the NotIn predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsNotIn(vs ...string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNotIn(FieldMisconfigurationURLDetails, vs...))
}

// MisconfigurationURLDetailsGT applies the GT predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsGT(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGT(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsGTE applies the GTE predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsGTE(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGTE(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsLT applies the LT predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsLT(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLT(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsLTE applies the LTE predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsLTE(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLTE(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsContains applies the Contains predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsContains(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldContains(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsHasPrefix applies the HasPrefix predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsHasPrefix(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldHasPrefix(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsHasSuffix applies the HasSuffix predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsHasSuffix(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldHasSuffix(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsEqualFold applies the EqualFold predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsEqualFold(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEqualFold(FieldMisconfigurationURLDetails, v))
}

// MisconfigurationURLDetailsContainsFold applies the ContainsFold predicate on the "misconfiguration_url_details" field.
func MisconfigurationURLDetailsContainsFold(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldContainsFold(FieldMisconfigurationURLDetails, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldContainsFold(FieldTitle, v))
}

// SeverityEQ applies the EQ predicate on the "severity" field.
func SeverityEQ(v Severity) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldEQ(FieldSeverity, v))
}

// SeverityNEQ applies the NEQ predicate on the "severity" field.
func SeverityNEQ(v Severity) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNEQ(FieldSeverity, v))
}

// SeverityIn applies the In predicate on the "severity" field.
func SeverityIn(vs ...Severity) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldIn(FieldSeverity, vs...))
}

// SeverityNotIn applies the NotIn predicate on the "severity" field.
func SeverityNotIn(vs ...Severity) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.FieldNotIn(FieldSeverity, vs...))
}

// HasManifestMisconfigurations applies the HasEdge predicate on the "manifest_misconfigurations" edge.
func HasManifestMisconfigurations() predicate.Misconfiguration {
	return predicate.Misconfiguration(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, ManifestMisconfigurationsTable, ManifestMisconfigurationsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasManifestMisconfigurationsWith applies the HasEdge predicate on the "manifest_misconfigurations" edge with a given conditions (other predicates).
func HasManifestMisconfigurationsWith(preds ...predicate.ManifestMisconfiguration) predicate.Misconfiguration {
	return predicate.Misconfiguration(func(s *sql.Selector) {
		step := newManifestMisconfigurationsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Misconfiguration) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Misconfiguration) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Misconfiguration) predicate.Misconfiguration {
	return predicate.Misconfiguration(sql.NotPredicates(p))
}
