// Code generated by ent, DO NOT EDIT.

package vulnerability

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/estebangarcia/cm3070-final-project/pkg/repositories/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldID, id))
}

// VulnerabilityID applies equality check predicate on the "vulnerability_id" field. It's identical to VulnerabilityIDEQ.
func VulnerabilityID(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldVulnerabilityID, v))
}

// VulnerabilityURLDetails applies equality check predicate on the "vulnerability_url_details" field. It's identical to VulnerabilityURLDetailsEQ.
func VulnerabilityURLDetails(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldVulnerabilityURLDetails, v))
}

// InstalledVersion applies equality check predicate on the "installed_version" field. It's identical to InstalledVersionEQ.
func InstalledVersion(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldInstalledVersion, v))
}

// FixedVersion applies equality check predicate on the "fixed_version" field. It's identical to FixedVersionEQ.
func FixedVersion(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldFixedVersion, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldTitle, v))
}

// V3Score applies equality check predicate on the "v3_score" field. It's identical to V3ScoreEQ.
func V3Score(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldV3Score, v))
}

// VulnerabilityIDEQ applies the EQ predicate on the "vulnerability_id" field.
func VulnerabilityIDEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldVulnerabilityID, v))
}

// VulnerabilityIDNEQ applies the NEQ predicate on the "vulnerability_id" field.
func VulnerabilityIDNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldVulnerabilityID, v))
}

// VulnerabilityIDIn applies the In predicate on the "vulnerability_id" field.
func VulnerabilityIDIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldVulnerabilityID, vs...))
}

// VulnerabilityIDNotIn applies the NotIn predicate on the "vulnerability_id" field.
func VulnerabilityIDNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldVulnerabilityID, vs...))
}

// VulnerabilityIDGT applies the GT predicate on the "vulnerability_id" field.
func VulnerabilityIDGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldVulnerabilityID, v))
}

// VulnerabilityIDGTE applies the GTE predicate on the "vulnerability_id" field.
func VulnerabilityIDGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldVulnerabilityID, v))
}

// VulnerabilityIDLT applies the LT predicate on the "vulnerability_id" field.
func VulnerabilityIDLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldVulnerabilityID, v))
}

// VulnerabilityIDLTE applies the LTE predicate on the "vulnerability_id" field.
func VulnerabilityIDLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldVulnerabilityID, v))
}

// VulnerabilityIDContains applies the Contains predicate on the "vulnerability_id" field.
func VulnerabilityIDContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldVulnerabilityID, v))
}

// VulnerabilityIDHasPrefix applies the HasPrefix predicate on the "vulnerability_id" field.
func VulnerabilityIDHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldVulnerabilityID, v))
}

// VulnerabilityIDHasSuffix applies the HasSuffix predicate on the "vulnerability_id" field.
func VulnerabilityIDHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldVulnerabilityID, v))
}

// VulnerabilityIDEqualFold applies the EqualFold predicate on the "vulnerability_id" field.
func VulnerabilityIDEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldVulnerabilityID, v))
}

// VulnerabilityIDContainsFold applies the ContainsFold predicate on the "vulnerability_id" field.
func VulnerabilityIDContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldVulnerabilityID, v))
}

// VulnerabilityURLDetailsEQ applies the EQ predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsNEQ applies the NEQ predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsIn applies the In predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldVulnerabilityURLDetails, vs...))
}

// VulnerabilityURLDetailsNotIn applies the NotIn predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldVulnerabilityURLDetails, vs...))
}

// VulnerabilityURLDetailsGT applies the GT predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsGTE applies the GTE predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsLT applies the LT predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsLTE applies the LTE predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsContains applies the Contains predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsHasPrefix applies the HasPrefix predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsHasSuffix applies the HasSuffix predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsEqualFold applies the EqualFold predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldVulnerabilityURLDetails, v))
}

// VulnerabilityURLDetailsContainsFold applies the ContainsFold predicate on the "vulnerability_url_details" field.
func VulnerabilityURLDetailsContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldVulnerabilityURLDetails, v))
}

// InstalledVersionEQ applies the EQ predicate on the "installed_version" field.
func InstalledVersionEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldInstalledVersion, v))
}

// InstalledVersionNEQ applies the NEQ predicate on the "installed_version" field.
func InstalledVersionNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldInstalledVersion, v))
}

// InstalledVersionIn applies the In predicate on the "installed_version" field.
func InstalledVersionIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldInstalledVersion, vs...))
}

// InstalledVersionNotIn applies the NotIn predicate on the "installed_version" field.
func InstalledVersionNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldInstalledVersion, vs...))
}

// InstalledVersionGT applies the GT predicate on the "installed_version" field.
func InstalledVersionGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldInstalledVersion, v))
}

// InstalledVersionGTE applies the GTE predicate on the "installed_version" field.
func InstalledVersionGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldInstalledVersion, v))
}

// InstalledVersionLT applies the LT predicate on the "installed_version" field.
func InstalledVersionLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldInstalledVersion, v))
}

// InstalledVersionLTE applies the LTE predicate on the "installed_version" field.
func InstalledVersionLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldInstalledVersion, v))
}

// InstalledVersionContains applies the Contains predicate on the "installed_version" field.
func InstalledVersionContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldInstalledVersion, v))
}

// InstalledVersionHasPrefix applies the HasPrefix predicate on the "installed_version" field.
func InstalledVersionHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldInstalledVersion, v))
}

// InstalledVersionHasSuffix applies the HasSuffix predicate on the "installed_version" field.
func InstalledVersionHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldInstalledVersion, v))
}

// InstalledVersionEqualFold applies the EqualFold predicate on the "installed_version" field.
func InstalledVersionEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldInstalledVersion, v))
}

// InstalledVersionContainsFold applies the ContainsFold predicate on the "installed_version" field.
func InstalledVersionContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldInstalledVersion, v))
}

// FixedVersionEQ applies the EQ predicate on the "fixed_version" field.
func FixedVersionEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldFixedVersion, v))
}

// FixedVersionNEQ applies the NEQ predicate on the "fixed_version" field.
func FixedVersionNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldFixedVersion, v))
}

// FixedVersionIn applies the In predicate on the "fixed_version" field.
func FixedVersionIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldFixedVersion, vs...))
}

// FixedVersionNotIn applies the NotIn predicate on the "fixed_version" field.
func FixedVersionNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldFixedVersion, vs...))
}

// FixedVersionGT applies the GT predicate on the "fixed_version" field.
func FixedVersionGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldFixedVersion, v))
}

// FixedVersionGTE applies the GTE predicate on the "fixed_version" field.
func FixedVersionGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldFixedVersion, v))
}

// FixedVersionLT applies the LT predicate on the "fixed_version" field.
func FixedVersionLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldFixedVersion, v))
}

// FixedVersionLTE applies the LTE predicate on the "fixed_version" field.
func FixedVersionLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldFixedVersion, v))
}

// FixedVersionContains applies the Contains predicate on the "fixed_version" field.
func FixedVersionContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldFixedVersion, v))
}

// FixedVersionHasPrefix applies the HasPrefix predicate on the "fixed_version" field.
func FixedVersionHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldFixedVersion, v))
}

// FixedVersionHasSuffix applies the HasSuffix predicate on the "fixed_version" field.
func FixedVersionHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldFixedVersion, v))
}

// FixedVersionEqualFold applies the EqualFold predicate on the "fixed_version" field.
func FixedVersionEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldFixedVersion, v))
}

// FixedVersionContainsFold applies the ContainsFold predicate on the "fixed_version" field.
func FixedVersionContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldFixedVersion, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldStatus, vs...))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldTitle, v))
}

// SeverityEQ applies the EQ predicate on the "severity" field.
func SeverityEQ(v Severity) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldSeverity, v))
}

// SeverityNEQ applies the NEQ predicate on the "severity" field.
func SeverityNEQ(v Severity) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldSeverity, v))
}

// SeverityIn applies the In predicate on the "severity" field.
func SeverityIn(vs ...Severity) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldSeverity, vs...))
}

// SeverityNotIn applies the NotIn predicate on the "severity" field.
func SeverityNotIn(vs ...Severity) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldSeverity, vs...))
}

// V3ScoreEQ applies the EQ predicate on the "v3_score" field.
func V3ScoreEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEQ(FieldV3Score, v))
}

// V3ScoreNEQ applies the NEQ predicate on the "v3_score" field.
func V3ScoreNEQ(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNEQ(FieldV3Score, v))
}

// V3ScoreIn applies the In predicate on the "v3_score" field.
func V3ScoreIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldIn(FieldV3Score, vs...))
}

// V3ScoreNotIn applies the NotIn predicate on the "v3_score" field.
func V3ScoreNotIn(vs ...string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldNotIn(FieldV3Score, vs...))
}

// V3ScoreGT applies the GT predicate on the "v3_score" field.
func V3ScoreGT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGT(FieldV3Score, v))
}

// V3ScoreGTE applies the GTE predicate on the "v3_score" field.
func V3ScoreGTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldGTE(FieldV3Score, v))
}

// V3ScoreLT applies the LT predicate on the "v3_score" field.
func V3ScoreLT(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLT(FieldV3Score, v))
}

// V3ScoreLTE applies the LTE predicate on the "v3_score" field.
func V3ScoreLTE(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldLTE(FieldV3Score, v))
}

// V3ScoreContains applies the Contains predicate on the "v3_score" field.
func V3ScoreContains(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContains(FieldV3Score, v))
}

// V3ScoreHasPrefix applies the HasPrefix predicate on the "v3_score" field.
func V3ScoreHasPrefix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasPrefix(FieldV3Score, v))
}

// V3ScoreHasSuffix applies the HasSuffix predicate on the "v3_score" field.
func V3ScoreHasSuffix(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldHasSuffix(FieldV3Score, v))
}

// V3ScoreEqualFold applies the EqualFold predicate on the "v3_score" field.
func V3ScoreEqualFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldEqualFold(FieldV3Score, v))
}

// V3ScoreContainsFold applies the ContainsFold predicate on the "v3_score" field.
func V3ScoreContainsFold(v string) predicate.Vulnerability {
	return predicate.Vulnerability(sql.FieldContainsFold(FieldV3Score, v))
}

// HasManifests applies the HasEdge predicate on the "manifests" edge.
func HasManifests() predicate.Vulnerability {
	return predicate.Vulnerability(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, ManifestsTable, ManifestsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasManifestsWith applies the HasEdge predicate on the "manifests" edge with a given conditions (other predicates).
func HasManifestsWith(preds ...predicate.Manifest) predicate.Vulnerability {
	return predicate.Vulnerability(func(s *sql.Selector) {
		step := newManifestsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Vulnerability) predicate.Vulnerability {
	return predicate.Vulnerability(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Vulnerability) predicate.Vulnerability {
	return predicate.Vulnerability(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Vulnerability) predicate.Vulnerability {
	return predicate.Vulnerability(sql.NotPredicates(p))
}
